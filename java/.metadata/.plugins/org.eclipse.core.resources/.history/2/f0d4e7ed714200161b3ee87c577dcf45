import java.util.*;

public class CoveringSegments {

    private static ArrayList<Integer> optimalPoints(Segment[] segments) {
        //write your code here
    	int[][]segArray=new int[segments.length][2];
    	for(int i=0;i<segments.length;i++){
    		for(int j=0;j<2;j++){
    			segArray[i][0]=segments[i].start;
    			segArray[i][1]=segments[i].end;
    		}
    	}
    	int flag=1;
    	//System.out.println(segArray);
    	ArrayList<Integer> points = new ArrayList();
        for (int i = 0; i < segments.length; i++) {
        	flag=1;
//            points[2 * i] = segments[i].start;
            for(int j=0;j<segments.length;j++){
	        	if(segments[i].start<=points.get(j) && segments[i].end>=points.get(j)){
	        		flag=0;break;
	        	}
            }
        	if(flag==1)
        	points.add(i,segments[i].end);
        	  
        }
        
        return points;
    }

    private static class Segment {
        int start, end;

        Segment(int start, int end) {
            this.start = start;
            this.end = end;
        }
    }
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Segment[] segments = new Segment[n];
        for (int i = 0; i < n; i++) {
            int start, end;
            start = scanner.nextInt();
            end = scanner.nextInt();
            segments[i] = new Segment(start, end);
        }
        ArrayList<Integer> points = optimalPoints(segments);
        System.out.println(points.size());
        for (int point : points) {
            System.out.print(point + " ");
        }
    }
}
 
